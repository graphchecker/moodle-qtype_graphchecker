{
    "name": "Binary tree properties",
    "checks": {
        "binaryTree": {
            "name": "Binary tree",
            "description": "Checks if the given graph is a binary tree.",
            "params": [
                {
                    "param": "downwards",
                    "name": "Root placed at the",
                    "type": "choice",
                    "options": ["top", "bottom"],
                    "default": "top"
                }
            ],
            "feedback": {
                "correct": "Correct!",
                "same height of nodes": "Not a binary tree: two adjacent nodes are at the same height and have no clear relationship.",
                "too many parents": "Not a binary tree: node [[vertexLabel]] has more than one parent.",
                "too many children": "Not a binary tree: node [[vertexLabel]] has more than two children.",
                "too many roots": "Not a binary tree: there is more than one root in the drawing."
            }
        },
        "binarySearchTree": {
            "name": "Binary search tree.",
            "description": "Checks if the given graph is a valid binary <i>search</i> tree.",
            "params": [
                {
                    "param": "downwards",
                    "name": "Root placed at the",
                    "type": "choice",
                    "options": ["top", "bottom"],
                    "default": "top"
                }
            ],
            "feedback": {
                "correct": "Correct!",
                "same height of nodes": "Not a binary tree: two adjacent nodes are at the same height and have no clear relationship.",
                "too many parents": "Not a binary tree: node [[vertexLabel]] has more than one parent.",
                "too many children": "Not a binary tree: node [[vertexLabel]] has more than two children.",
                "too many roots": "Not a binary tree: there is more than one root in the drawing.",
                "label not numerical": "The label [[vertexLabel]] is not numerical.",
                "not sorted order": "The elements do not form a sorted order on an in-order traversal."
            }
        },
        "inOrderTraversal": {
            "name": "In-order traversal",
            "description": "Checks if an in-order traversal gives the required order.",
            "params": [
                {
                    "param": "labels",
                    "name": "Elements in order",
                    "type": "string_list",
                    "default": ""
                },
                {
                    "param": "downwards",
                    "name": "Root placed at the",
                    "type": "choice",
                    "options": ["top", "bottom"],
                    "default": "top"
                }
            ],
            "feedback": {
                "correct": "Correct!",
                "too few nodes": "Expected [[missingLabelsSize]] additional labels to be found.",
                "too many nodes": "There are more elements in the answer than expected.",
                "mismatched labels": "Labels do not match at node: [[vertexLabel]] and label: [[expectedLabel]]."
            }
        },
        "inLeaf": {
            "name": "Elements in leaves",
            "description": "Checks if the specified elements are in leaves of the tree.",
            "params": [
                {
                    "param": "labels",
                    "name": "Elements that should be leaves",
                    "type": "string_list",
                    "default": ""
                },
                {
                    "param": "downwards",
                    "name": "Root placed at the",
                    "type": "choice",
                    "options": ["top", "bottom"],
                    "default": "top"
                }
            ],
            "feedback": {
                "correct": "Correct!",
                "not in leaf": "Element [[element]] was not in a leaf.",
                "missing element": "Not all required elements are in a leaf. For example '[[exampleElement]]' is not in a leaf."
            }
        },
        "nodeDepth": {
            "name": "Vertex depth",
            "description": "Checks if the vertex with the given unique label is at the given depth.",
            "params": [
                    {
                        "param": "label",
                        "name": "The vertex with label ",
                        "type": "string"
                    },
                    {
                        "param": "depth",
                        "name": "has depth ",
                        "type": "integer"
                    },
                    {
                        "param": "downwards",
                        "name": "Tree root is placed at the",
                        "type": "choice",
                        "options": ["top", "bottom"],
                        "default": "top"
                    }
            ],
            "feedback": {
                "correct": "Correct!",
                "layout problem": "There is a problem with the layout that makes distinguishing the tree impossible.",
                "depth wrong": "Vertex [[vertexLabel]] should have depth [[depthExpected]] but has depth [[depthReal]].",
                "missing vertex": "Vertex with label [[vertexLabel]] could not be found."
            }
        },
        "treeHeight": {
            "name": "Tree height",
            "description": "Checks if the binary tree has the given height.",
            "params": [
                    {
                        "param": "height",
                        "name": "Tree height should be",
                        "type": "integer"
                    },
                    {
                        "param": "downwards",
                        "name": "Tree root is placed at the",
                        "type": "choice",
                        "options": ["top", "bottom"],
                        "default": "top"
                    }
            ],
            "feedback": {
                "correct": "Correct!",
                "layout problem": "There is a problem with the layout that makes distinguishing the tree impossible.",
                "height wrong": "The tree should have height [[heightExpected]] but has depth [[heightReal]]."
            }
        }
    }
}
