{"version":3,"sources":["../src/authorform.js"],"names":["define","$","ui","initEditForm","strings","$sampleAnswerField","$preloadField","$checksField","$typeCombo","setUi","$textArea","uiName","attr","uiWrapper","data","uiname","InterfaceWrapper","on","window","confirm","$form","closest","submit"],"mappings":"AAwBAA,OAAM,iCAAC,CAAC,QAAD,CAAW,yCAAX,CAAD,CAAwD,SAASC,CAAT,CAAYC,CAAZ,CAAgB,CAyD1E,MAAO,CAACC,YAAY,CAjDpB,SAAsBC,CAAtB,CAA+B,CAC3B,GAAIC,CAAAA,CAAkB,CAAGJ,CAAC,CAAC,YAAD,CAA1B,CACIK,CAAa,CAAGL,CAAC,CAAC,mBAAD,CADrB,CAEIM,CAAY,CAAGN,CAAC,CAAC,YAAD,CAFpB,CAGIO,CAAU,CAAGP,CAAC,CAAC,gBAAD,CAHlB,CAOA,QAASQ,CAAAA,CAAT,CAAeC,CAAf,CAA0BC,CAA1B,CAAkC,CACbD,CAAS,CAACE,IAAV,CAAe,aAAf,CADa,CAI9BC,SAAS,CAAGH,CAAS,CAACI,IAAV,CAAe,oBAAf,CAAZ,CACA,GAAID,SAAS,EAAIA,SAAS,CAACE,MAAV,EAAoBJ,CAArC,CAA6C,CACzC,MACH,CACD,GAAI,CAACE,SAAL,CAAgB,CACZA,SAAS,CAAG,GAAIX,CAAAA,CAAE,CAACc,gBAAP,CAAwBL,CAAxB,CAAgCD,CAAS,CAACE,IAAV,CAAe,IAAf,CAAhC,CACf,CAEJ,CAcD,CAXA,UAAkB,CACdH,CAAK,CAACJ,CAAD,CAAqB,OAArB,CAAL,CACAI,CAAK,CAACH,CAAD,CAAgB,OAAhB,CAAL,CACAG,CAAK,CAACF,CAAD,CAAe,QAAf,CACR,CAOD,IAEAC,CAAU,CAACS,EAAX,CAAc,QAAd,CAAwB,UAAW,CAC/B,GAAIC,MAAM,CAACC,OAAP,yGAAJ,CAE4B,CAExB,GAAIC,CAAAA,CAAK,CAAGZ,CAAU,CAACa,OAAX,CAAmB,MAAnB,CAAZ,CACAD,CAAK,CAACE,MAAN,EACH,CAGJ,CAVD,CAWH,CAEM,CACV,CA1DK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for handling UI actions in the question authoring form.\n *\n * @package    qtype\n * @subpackage graphchecker\n * @copyright  Richard Lobb, 2015, The University of Canterbury\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'qtype_graphchecker/userinterfacewrapper'], function($, ui) {\n\n    // Set up the author edit form UI plugins and event handlers.\n    // The strings parameter is an associative array containing a subset of\n    // the strings extracted from lang/xx/qtype_graphchecker.php.\n    // The template parameters and Ace language are passed to each\n    // text area from PHP by setting its data-params and\n    // data-lang attributes.\n    function initEditForm(strings) {\n        let $sampleAnswerField = $('#id_answer'),\n            $preloadField = $('#id_answerpreload'),\n            $checksField = $('#id_checks'),\n            $typeCombo = $('#id_answertype');\n\n        // Set up the UI controller for the textarea whose name is\n        // given as the first parameter to the given UI controller.\n        function setUi($textArea, uiName) {\n            let paramsJson = $textArea.attr('data-params');\n\n            // check if the right UI controller is already present\n            uiWrapper = $textArea.data('current-ui-wrapper');\n            if (uiWrapper && uiWrapper.uiname == uiName) {\n                return;\n            }\n            if (!uiWrapper) {\n                uiWrapper = new ui.InterfaceWrapper(uiName, $textArea.attr('id'));\n            }\n\n        }\n\n        // Set the correct Ui controller on both the sample answer and the answer preload.\n        function setUis() {\n            setUi($sampleAnswerField, 'graph');  // TODO change this into whatever UI the question wants\n            setUi($preloadField, 'graph');\n            setUi($checksField, 'checks');\n        }\n\n        // Get the required string from the strings parameter.\n        function getString(key) {\n            return strings[key];\n        }\n\n        setUis();  // Set up UI controllers on answer and answerpreload.\n\n        $typeCombo.on('change', function() {\n            if (window.confirm('Changing the answer type will clear the ' +\n                    'Answer box preload, Checks, and Sample answer ' +\n                    'sections below.')) {\n                // TODO actually clear the boxes and set the template parameters\n                let $form = $typeCombo.closest('form');\n                $form.submit();\n            } else {\n                // TODO put back the old value\n            }\n        });\n    }\n\n    return {initEditForm: initEditForm};\n});\n\n"],"file":"authorform.min.js"}