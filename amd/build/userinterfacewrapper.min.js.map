{"version":3,"sources":["../src/userinterfacewrapper.js"],"names":["define","$","InterfaceWrapper","uiname","textareaId","params","t","GUTTER","MIN_WRAPPER_HEIGHT","taId","loadFailId","textArea","document","getElementById","attr","templateParams","JSON","parse","lang","readOnly","prop","isLoading","loadFailed","retries","Math","max","parseInt","css","wrapperNode","after","hide","width","data","uiInstance","loadUi","mousemove","checkForResize","window","resize","closest","submit","sync","body","on","e","keyCode","ctrlKey","altKey","stop","restart","prototype","setLoadFailMessage","langString","errorDiv","require","str","s","get_string","fallback","when","done","html","alert","loading","setTimeout","sessionStorage","getItem","ui","loadFailDiv","jqLoadFailDiv","h","w","innerHeight","innerWidth","Constructor","failed","destroy","addClass","insertBefore","failMessage","hLast","wLast","show","append","getElement","isResizable","overflow","minHeight","border","hasFocus","focus","selectionStart","value","length","removeClass","remove","hAdjusted","wAdjusted","xLeft","maxWidth","offset","left","min","newUiWrapper"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * This module provides a wrapper for user-interface modules, handling hiding\n * of the textArea that is being replaced by the UI element,\n * resizing of the UI component, and support of such usability functions as\n * ctrl-alt-M to disable/re-enable the entire user interface, including the\n * wrapper.\n *\n * @package    qtype\n * @subpackage graphchecker\n * @copyright  Richard Lobb, 2015, The University of Canterbury\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n * The InterfaceWrapper class is constructed either by Moodle PHP calls of\n * the form\n *\n * $PAGE->requires->js_call_amd($modulename, $functionname, $params)\n *\n * (e.g. from within render.php) or by JavaScript require calls, e.g. from\n * authorform.js when the question author changes UI type.\n *\n * The InterfaceWrapper provides:\n *\n * 1. A constructor InterfaceWrapper(uiname, textareaId) which\n *    hides the given text area, replaces it with a wrapper div (resizable in\n *    height by the user but with width resizing managed by changes in window\n *    width), created an instance of nameInstance as defined in the file\n *    ui_name.js (see below).\n *    params is a record containing the decoded value of\n *\n * 2. A stop() method that destroys the embedded UI and hides the wrapper.\n *\n * 3. A restart() method that shows the wrapper again and re-creates the prior\n *    embedded UI component within it.\n *\n * 4. A loadUi(uiname, params) method that kills any currently running UI element\n *    (if there is one) and (re)loads the specified one. The params parameter\n *    is a record that allows additional parameters to be passed in, such as\n *    those from the question's templateParams field and, in the case of the\n *    Ace UI, the 'lang' (language) that the editor is editing. This data\n *    is supplied by the PHP via the data-params attribute of the answer's\n *    base textarea.\n *\n * 5. Regular checking for any resizing of the wrapper, which are passed on to\n *    the embedded UI element's resize() method.\n *\n * 6. Monitoring of alt-ctrl-M key presses which toggle the visibility of the\n *    wrapper plus UI element and the syncronised textArea by calls to stop()\n *    and restart\n *\n * =========================================================================\n *\n * The embedded user-interface module must be defined in a JavaScript file\n * of the form ui_name.js which must define a class nameInstance with\n * the following functionality:\n *\n * 1. A constructor SomeUiName(textareaId, width, height, params) that\n *    builds an HTML component of the given width and height. textareaId is the\n *    ID of the textArea from which the UI element should obtain its initial\n *    serialisation and to which it should write the serialisation when its save\n *    or destroy methods are called. params is a JavaScript object,\n *    decoded from the JSON templateParams defined by the question plus any\n *    additional data required, such as the 'lang' in the case of Ace.\n *\n * 2. A getElement() method that returns the HTML element that the\n *    InterfaceWrapper is to insert into the document tree.\n *\n * 3. A method failed() that should return true unless the constructor\n *    failed (e.g. because it was not able to de-serialise the text area's\n *    contents). The wrapper will call destroy() on the object if failed()\n *    returns true and abort the use of the UI element. The text area will\n *    have the uiloadfailed class added, which CSS will display in some\n *    error mode (e.g. a red border).\n *\n * 4. A method failMessage() that will be called only when failed() returns\n *    True. It should be a defined CodeRunner language string key.\n *\n * 5. A sync() method that copies the serialised represention of the UI plugin's\n *    data to the related TextArea. This is used when submit is clicked.\n *\n * 6. A destroy() method that should sync the contents to the text area then\n *    destroy any HTML elements or other created content. This method is called\n *    when CTRL-ALT-M is typed by the user to turn off all UI plugins\n *\n * 7. A resize(width, height) method that should resize the entire UI element\n *    to the given dimensions.\n *\n * 8. A hasFocus() method that returns true if the UI element has focus.\n *\n * 9. (Optional) A isResizable() method that returns true if the UI element can\n *    be resized (if this method is not present, true is assumed).\n *\n * The return value from the module define is a record with a single field\n * 'Constructor' that references the constructor (e.g. Graph, AceWrapper etc)\n *\n *****************************************************************************/\n\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more util.details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n\ndefine(['jquery'], function($) {\n\n    function InterfaceWrapper(uiname, textareaId) {\n        // Constructor for a new user interface.\n        // uiname is the name of the interface element (e.g. ace, graph, etc)\n        // which should be in file ui_ace.js, ui_graph.js etc.\n        // textareaId is the id of the text area that the UI is to manage.\n        // The text area should have an attribute data-params, which is a\n        // JSON encoded record containing whatever additional parameters might\n        // be needed by the User interface. As a minimum it should contain all\n        // the parameters from the template-params field of\n        // the question so that question authors can pass in additional data\n        // such as whether graph edges are bidirectional or not in the case of\n        // the graph UI. Additionally the Ace editor requires a 'lang' field\n        // to specify what language the editor is editing.\n        // When the wrapper has been set up on a text area, the text area's\n        // data attribute contains an entry for 'current-ui-wrapper' that is\n        // a reference to the wrapper ('this').\n        var  h,\n             params,\n             t = this; // For use by embedded functions.\n\n        this.GUTTER = 14;  // Size of gutter at base of wrapper Node (pixels)\n        this.MIN_WRAPPER_HEIGHT = 50;\n\n        this.taId = textareaId;\n        this.loadFailId = textareaId + '_loadfailerr';\n        this.textArea = $(document.getElementById(textareaId));\n        params = this.textArea.attr('data-params');\n        if (params) {\n            this.templateParams = JSON.parse(params);\n        } else {\n            this.templateParams = {};\n        }\n        this.templateParams.lang = this.textArea.attr('data-lang');\n        this.readOnly = this.textArea.prop('readonly');\n        this.isLoading = false;  // True if we're busy loading a UI element\n        this.loadFailed = false;  // True if UI failed to initialise properly\n        this.retries = 0;        // Number of failed attempts to load a UI component\n\n        h = Math.max(parseInt(this.textArea.css(\"height\")), this.MIN_WRAPPER_HEIGHT);\n\n        // Construct an empty hidden wrapper div, inserted directly after the\n        // textArea, ready to contain the actual UI.\n        this.wrapperNode = $(\"<div id='\" + this.taId + \"_wrapper' class='ui_wrapper'></div>\");\n        this.textArea.after(this.wrapperNode);\n        this.wrapperNode.hide();\n        this.wrapperNode.css({\n            width: \"100%\",\n        });\n\n        // Record a reference to this wrapper in the text area's data attribute\n        // for use by external javascript that needs to interact with the\n        // wrapper, e.g. the multilanguage.js module.\n        this.textArea.data('current-ui-wrapper', this);\n\n        // Load the UI into the wrapper (aysnchronous).\n        this.uiInstance = null;  // Defined by loadUi asynchronously\n        this.loadUi(uiname, this.templateParams);  // Load the required UI element\n\n        // Add event handlers\n        $(document).mousemove(function() {\n            t.checkForResize();\n        });\n        $(window).resize(function() {\n            t.checkForResize();\n        });\n        this.textArea.closest('form').submit(function() {\n            if (t.uiInstance !== null) {\n                t.uiInstance.sync();\n            }\n        });\n        $(document.body).on('keydown', function(e) {\n            var KEY_M = 77;\n            if (e.keyCode === KEY_M && e.ctrlKey && e.altKey) {\n                if (t.uiInstance !== null || t.loadFailed) {\n                    t.stop();\n                } else {\n                    t.restart();        // Reactivate\n                }\n            }\n        });\n    }\n\n\n    InterfaceWrapper.prototype.loadUi = function(uiname, params) {\n        // Load the specified UI element (which in the case of Ace will need\n        // to know the language, lang, as well - this must be supplied as\n        // a 'lang' attribute of the record params.\n        // When ui is up and running, this.uiInstance will reference it.\n        // To avoid a potential race problem, if this method is already busy\n        // with a load, try again in 200 msecs.\n        //\n        var t = this,\n            errPart1 = 'Failed to load ',\n            errPart2 = ' UI component. If this error persists, please report it to the forum on coderunner.org.nz';\n\n        function setLoadFailMessage(langString, errorDiv) {\n            // Get the given language string and plug it into the given jQuery\n            // div element as its html, plus a 'fallback' message on a separate line.\n            require(['core/str'], function(str) {\n                // Get langString text via AJAX\n                var\n                    s = str.get_string(langString, 'qtype_graphchecker'),\n                    fallback = str.get_string('ui_fallback', 'qtype_graphchecker');\n                $.when(s, fallback).done(function(s, fallback) {\n                    errorDiv.html(s + '<br>' + fallback);\n                });\n            });\n        }\n\n        if (this.isLoading) {  // Oops, we're loading a UI element already\n            this.retries += 1;\n            if (this.retries > 20) {\n                alert(errPart1 + uiname + errPart2);\n                this.retries = 0;\n                this.loading = 0;\n            } else {\n                setTimeout(function() {\n                    t.loadUi(uiname, params);\n                }, 200); // Try again in 200 msecs\n            }\n            return;\n        }\n        this.retries = 0;\n        this.params = params;  // Save in case need to restart\n\n        this.stop();  // Kill any active UI first\n        this.uiname = uiname;\n\n        if (this.uiname === '' || this.uiname === 'none' || sessionStorage.getItem('disableUis')) {\n            this.uiInstance = null;\n        } else {\n            this.isLoading = true;\n            require(['qtype_graphchecker/ui_' + this.uiname],\n                function(ui) {\n                    var uiInstance,loadFailDiv, jqLoadFailDiv, h, w;\n\n                    h = t.wrapperNode.innerHeight() - t.GUTTER;\n                    w = t.wrapperNode.innerWidth();\n                    uiInstance = new ui.Constructor(t.taId, w, h, params);\n                    if (uiInstance.failed()) {\n                        // Constructor failed to load serialisation.\n                        // Set uiloadfailed class on text area.\n                        t.loadFailed = true;\n                        t.wrapperNode.hide();\n                        uiInstance.destroy();\n                        t.uiInstance = null;\n                        t.textArea.addClass('uiloadfailed');\n                        loadFailDiv = '<div id=\"' + t.loadFailId + '\"class=\"uiloadfailed\"></div>';\n                        jqLoadFailDiv = $(loadFailDiv);\n                        jqLoadFailDiv.insertBefore(t.textArea);\n                        setLoadFailMessage(uiInstance.failMessage(), jqLoadFailDiv);  // Insert error by AJAX\n                    } else {\n                        t.hLast = 0;  // Force resize (and hence redraw)\n                        t.wLast = 0;  // ... on first call to checkForResize\n                        t.textArea.hide();\n                        t.wrapperNode.show();\n                        t.wrapperNode.append(uiInstance.getElement());\n                        t.uiInstance = uiInstance;\n                        t.loadFailed = false;\n                        // assume resizability if either isResizable() is not\n                        // defined, or if it returns true\n                        if (!uiInstance.isResizable || uiInstance.isResizable()) {\n                            t.wrapperNode.css({\n                                resize: 'vertical',\n                                overflow: 'hidden',\n                                minHeight: h,\n                                border: '1px solid darkgrey'\n                            });\n                            t.checkForResize();\n                        } else {\n                            t.wrapperNode.css({\n                                resize: 'none',\n                                overflow: 'auto',\n                                minHeight: 'auto',\n                                border: 'none'\n                            });\n                        }\n                    }\n                    t.isLoading = false;\n                });\n        }\n    };\n\n\n    InterfaceWrapper.prototype.stop = function() {\n        // Disable (shutdown) the embedded ui component.\n        // The wrapper remains active for ctrl-alt-M events, but is hidden.\n        if (this.uiInstance !== null) {\n            this.textArea.show();\n            if (this.uiInstance.hasFocus()) {\n                this.textArea.focus();\n                this.textArea[0].selectionStart = this.textArea[0].value.length;\n            }\n            this.uiInstance.destroy();\n            this.uiInstance = null;\n            this.wrapperNode.hide();\n        }\n        this.loadFailed = false;\n        this.textArea.removeClass('uiloadfailed'); // Just in case it failed before\n        $(document.getElementById(this.loadFailId)).remove();\n    };\n\n\n    InterfaceWrapper.prototype.restart = function() {\n        // Re-enable the ui element (e.g. after alt-cntrl-M). This is\n        // a full re-initialisation of the ui element.\n        if (this.uiInstance === null) {\n            // Restart the UI component in the textarea\n            this.loadUi(this.uiname, this.params);\n        }\n    };\n\n\n\n    InterfaceWrapper.prototype.checkForResize = function() {\n        // Check for wrapper resize - propagate to ui element.\n        var h, hAdjusted, w, wAdjusted, xLeft, maxWidth;\n        var SIZE_HACK = 25;  // Horrible but best I can do. TODO: FIXME\n\n        if (this.uiInstance) {\n            h = this.wrapperNode.innerHeight();\n            w = this.wrapperNode.innerWidth();\n            if (h != this.hLast || w != this.wLast) {\n                xLeft = this.wrapperNode.offset().left;\n                maxWidth = $(window).innerWidth() - xLeft - SIZE_HACK;\n                hAdjusted = h - this.GUTTER;\n                wAdjusted = Math.min(maxWidth, w);\n                this.uiInstance.resize(wAdjusted,  hAdjusted);\n                this.hLast = this.wrapperNode.innerHeight();\n                this.wLast = this.wrapperNode.innerWidth();\n            }\n        }\n    };\n\n    /**\n     *  The external entry point from the PHP.\n     * @param string uiname, e.g. 'ace'\n     * @param string textareaId\n     * @returns {userinterfacewrapperL#111.InterfaceWrapper}\n     */\n    function newUiWrapper(uiname, textareaId) {\n        if (uiname) {\n            return new InterfaceWrapper(uiname, textareaId);\n        } else {\n            return null;\n        }\n    }\n\n\n    return {\n        newUiWrapper: newUiWrapper,\n        InterfaceWrapper: InterfaceWrapper\n    };\n});\n"],"file":"userinterfacewrapper.min.js"}